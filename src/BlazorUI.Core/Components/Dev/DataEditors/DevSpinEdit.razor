@inherits DevBaseEditor

<DxGridLayoutItem Column="ColumnIndex"
                  ColumnSpan="ColumnSpan"
                  Row="RowIndex"
                  RowSpan="RowSpan"
                  Visible="Visible">

    <Template>
        <DxSpinEdit @ref="_dxSpinEdit"
                    @bind-Value="@Value"
                    AllowMouseWheel="true"
                    Enabled="Enabled"
                    Mask="@NumericMask.WholeNumber"
                    MinValue="MinValue"
                    MaxValue="MaxValue"
                    ReadOnly="ReadOnly">
        </DxSpinEdit>
    </Template>


</DxGridLayoutItem>

<DevLabel Caption="@Caption"
          ColumnIndex="ColumnIndex-2"
          RowIndex="RowIndex">

</DevLabel>

<DevLabel Caption="@SeperateCaption"
          ColumnIndex="ColumnIndex-1"
          RowIndex="RowIndex">

</DevLabel>

@code {

    private DxSpinEdit<int> _dxSpinEdit;
    private int _value;

    [Parameter] public int MaxValue { get; set; } = 100;
    [Parameter] public int MinValue { get; set; } = 0;
    [Parameter] public EventCallback<int> ValueChanged { get; set; }

    [Parameter]
    public int Value
    {
        get => _value;
        set
        {
            if (_value == value) return;
            _value = value;
            ValueChanged.InvokeAsync(value);
        }
    }


    protected override async Task OnAfterRenderAsync(bool firstRender)
    {
        if (IsFocus && Visible && firstRender)
            await _dxSpinEdit.FocusAsync();
    }
}
