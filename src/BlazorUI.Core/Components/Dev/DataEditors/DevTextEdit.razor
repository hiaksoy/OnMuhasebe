@inherits DevBaseEditor


<DxGridLayoutItem Column="ColumnIndex"
                  Row="RowIndex"
                  ColumnSpan="ColumnSpan"
                  RowSpan="RowSpan"
                  Visible="Visible">


    <Template>
        <DxTextBox @ref="_dxTextBox"
                   @bind-Text="@Value"
                   ClearButtonDisplayMode="ClearButtonDisplayMode"
                   Enabled="Enabled"
                   NullText="@NullText"
                   ReadOnly="ReadOnly">

        </DxTextBox>
    </Template>

</DxGridLayoutItem>

<DevLabel Caption="@Caption"
          ColumnIndex="ColumnIndex-2"
          RowIndex="RowIndex">

</DevLabel>

<DevLabel Caption="@SeperateCaption"
          ColumnIndex="ColumnIndex-1"
          RowIndex="RowIndex">

</DevLabel>

@code {
    private DxTextBox _dxTextBox;
    private string _value;
    [Parameter] public EventCallback<string> ValueChanged { get; set; }
    [Parameter]
    public string Value
    {
        get => _value;
        set
        {
            if (_value == value) return;
            _value = value;
            ValueChanged.InvokeAsync(value);
        }
    }

    protected override async Task OnAfterRenderAsync(bool firstRender)
    {
        if (IsFocus && Visible && firstRender)
            await _dxTextBox.FocusAsync();

    }
}
