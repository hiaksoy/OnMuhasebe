
@inherits DevBaseEditor

<DxGridLayoutItem Column="ColumnIndex"
                  ColumnSpan="ColumnSpan"
                  Row="RowIndex"
                  RowSpan="RowSpan"
                  Visible="Visible">

    <Template>
        <DxMaskedInput @ref="_dxMaskedInput"
                       @bind-Value="@Value"
                       DisplayFormat="c2"
                       Enabled="Enabled"
                       Mask="@NumericMask.Currency"
                       ReadOnly="ReadOnly">

                       <DxNumericMaskProperties Culture="CultureInfo.CurrentCulture"></DxNumericMaskProperties>
        </DxMaskedInput>
    </Template>


</DxGridLayoutItem>

<DevLabel Caption="@Caption"
          ColumnIndex="ColumnIndex-2"
          RowIndex="RowIndex">

</DevLabel>

<DevLabel Caption="@SeperateCaption"
          ColumnIndex="ColumnIndex-1"
          RowIndex="RowIndex">

</DevLabel>

@code {
    private DxMaskedInput<decimal> _dxMaskedInput;
    private decimal _value;

    [Parameter] public EventCallback<decimal> ValueChanged { get; set; }

    [Parameter]
    public decimal Value
    {
        get => _value;
        set
        {
            if (_value == value) return;
            _value = value;
            ValueChanged.InvokeAsync(value);
        }
    }
    protected override async Task OnAfterRenderAsync(bool firstRender)
    {
        if (IsFocus && Visible && firstRender)
            await _dxMaskedInput.FocusAsync();
    }
}
